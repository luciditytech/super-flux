#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'super'
require 'super/flux'
require 'super/struct'
require 'json'

Super::Flux.configure do |config|
  config.kafka = {
    seed_brokers: ENV.fetch('KAFKA_BROKERS', 'localhost:9092').split(','),
    client_id: 'flux'
  }

  config.producer_options = {
    max_buffer_size: 10_000,
    compression_codec: :lz4,
    required_acks: 1
  }
end

class StdoutConsumerTask
  include Super::Flux::Task

  topic ENV['TOPIC']
  group_id 'stdout-consumer-task'
  retries 0
  wait 0

  def call(data)
    puts "#{data}\n"
  end
end

puts "Starting consuming from: #{ENV['TOPIC']}"

Super::Flux.run(StdoutConsumerTask)
